# Generated by Django 5.2.4 on 2025-08-04 19:28

import django.contrib.auth.models
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='MasterType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=50, unique=True)),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='VehicleEntries',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('vehicle_number', models.CharField(max_length=100)),
                ('status', models.CharField(blank=True, max_length=7, null=True)),
                ('time', models.DateTimeField(auto_now_add=True)),
                ('vehicle_registered', models.BooleanField(default=True)),
                ('created_by', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('uid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('owner_type', models.CharField(blank=True, choices=[('owner', 'Owner'), ('tenent', 'Tenent')], max_length=10, null=True)),
                ('mobile', models.CharField(max_length=13, unique=True)),
                ('flat', models.CharField(max_length=4)),
                ('bike_number', models.CharField(blank=True, max_length=12, null=True, unique=True)),
                ('car_number', models.CharField(blank=True, max_length=12, null=True, unique=True)),
                ('id_number', models.CharField(max_length=50, unique=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='MasterValue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(max_length=100)),
                ('display_order', models.IntegerField(default=0)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='values', to='society.mastertype')),
            ],
            options={
                'ordering': ['type', 'display_order'],
                'unique_together': {('type', 'value')},
            },
        ),
        migrations.CreateModel(
            name='Complaint',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('description', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('category', models.ForeignKey(limit_choices_to={'type__code': 'complaint_category'}, on_delete=django.db.models.deletion.CASCADE, related_name='complaint_type', to='society.mastervalue')),
                ('priority', models.ForeignKey(limit_choices_to={'type__code': 'priority'}, on_delete=django.db.models.deletion.CASCADE, related_name='priority', to='society.mastervalue')),
                ('status', models.ForeignKey(limit_choices_to={'type__code': 'status'}, on_delete=django.db.models.deletion.CASCADE, to='society.mastervalue')),
            ],
        ),
        migrations.AddField(
            model_name='customuser',
            name='id_type',
            field=models.ForeignKey(limit_choices_to={'type__code': 'id_proof_type'}, on_delete=django.db.models.deletion.CASCADE, related_name='id_type', to='society.mastervalue'),
        ),
    ]
